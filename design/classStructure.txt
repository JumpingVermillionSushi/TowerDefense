MyGame
    -playGame
        -state
            -updateFunction->examples of(regular, onPause)
            -renderFunction->examples of(regular, onPause, placingTower)

        -model
            -arenaModel(dataStructure)
                -creepsModel
                -towersModel
            -score/wave/values

        -controller(takes model, takes state)
            -initiatePlaceTower
            -pauseGame
            -other state changes

        -view "ui"(takes model and controller)
            -arenaView(takes mouse input, draws model)
            -score display
            -wave display
            -buttons

    -components(Constructors)//yes
        -Tower
        -Weapons
        -Creep

    -uiComponents(Constructors)
        -ButtonArea
        -Button
        -WaveIndicator

    -input
        -keyboard
        -mouse
        
    -Collision System
        We need at least a structure to house the algorithms, create Bounding Heircal stucture as follwoing, then we can abstract it for buttons/creeeps etc...
        --Parent
            --has Bounding Box
            --has Array of children that have function checkCollsion(Box)
            --has function checkCollsion(Box)
    